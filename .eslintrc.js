module.exports = {
  env: {
    es2020: true,
    node: true,
  },
  extends: [
    'google',
    'plugin:json/recommended',
    'plugin:eslint-comments/recommended',
    'prettier/@typescript-eslint',
    'prettier',
    'plugin:prettier/recommended',
    'plugin:import/errors',
    'plugin:import/warnings',
    'plugin:import/typescript',
  ],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaVersion: 11,
    sourceType: 'module',
    project: 'tsconfig.json',
    ecmaFeatures: {
      modules: true,
    },
  },

  plugins: [
    '@typescript-eslint',
    'promise',
    'eslint-comments',
    'json',
    'markdown',
    'async-await',
    'prettier',
  ],
  rules: {
    'import/no-unresolved': [2, { commonjs: true, amd: true }],
    'import/named': 2,
    'import/namespace': 2,
    'import/default': 2,
    'import/export': 2,
    'prettier/prettier': 'error',
    'block-spacing': ['error', 'always'],
    'lines-around-comment': [0],
    'lines-between-class-members': ['error', 'always'],
    'no-console': ['error', { allow: ['warn', 'error'] }],
    'no-mixed-spaces-and-tabs': ['error'],
    'no-multi-spaces': ['error'],
    'no-multiple-empty-lines': ['error'],
    'no-spaced-func': ['error'],
    'no-whitespace-before-property': ['error'],
    'space-before-blocks': ['error', 'always'],
    'spaced-comment': ['error', 'always', { markers: ['/'] }],
    'newline-per-chained-call': ['off'],
    '@typescript-eslint/member-ordering': 'off',
    '@typescript-eslint/quotes': ['error', 'single'],
    '@typescript-eslint/semi': ['off', null],
    '@typescript-eslint/no-explicit-any': ['error', { ignoreRestArgs: false }],
    'padding-line-between-statements': [
      'error',
      { blankLine: 'always', prev: 'const', next: '*' },
      { blankLine: 'always', prev: '*', next: 'const' },
      { blankLine: 'always', prev: 'function', next: '*' },
      { blankLine: 'always', prev: '*', next: 'function' },
      { blankLine: 'always', prev: 'if', next: '*' },
      { blankLine: 'always', prev: '*', next: 'if' },
      { blankLine: 'always', prev: 'for', next: '*' },
      { blankLine: 'always', prev: '*', next: 'for' },
      { blankLine: 'always', prev: 'switch', next: '*' },
      { blankLine: 'always', prev: '*', next: 'switch' },
      { blankLine: 'always', prev: 'try', next: '*' },
      { blankLine: 'always', prev: '*', next: 'try' },
      { blankLine: 'always', prev: 'export', next: '*' },
      { blankLine: 'always', prev: '*', next: 'export' },
    ],
    'max-lines': ['error', { max: 300, skipBlankLines: true, skipComments: true }],
    'no-restricted-imports': [
      'error',
      {
        paths: [
          {
            name: 'styled-components',
            message: 'Please import from styled-components/macro.',
          },
        ],
        patterns: ['!styled-components/macro'],
      },
    ],
    'async-await/space-after-async': 2,
    'async-await/space-after-await': 2,
    'eslint-comments/disable-enable-pair': [
      'error',
      {
        allowWholeFile: true,
      },
    ],
  },
};
